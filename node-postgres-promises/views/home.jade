doctype html
meta(charset='utf-8')

html
    head
        title= title
        script(src='javascripts/d3.min.js')
        script(src='javascripts/topojson.min.js')
        link(href='stylesheets/style.css' type='text/css' rel='stylesheet')
        link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-beta/css/bootstrap.min.css')
    body
        h1= title
        h2= "Variação Predial Entre 2011 e 2016"
        div(id="graph")
        div(id="map")
        svg(id="main")
        script.
            var height = document.body.clientHeight;
            var width = document.body.clientWidth;

            window.onclick = function(event){
                if(!(event.target.localName=="path")) {
                    d3.selectAll("path").classed("selected", false);
                    graph.classed("hidden", true);
                    graph.selectAll("svg").remove();
                }
            }
            
            var zoom = d3.zoom()
                        .on("zoom", function() {
                            g.attr("transform", d3.event.transform);
                        });

            var main = d3.select("#main")
                .attr("width", width)
                .attr("height", height)
                .call(zoom);

            var tooltip = d3.select("#map")
                            .append("div")
                            .attr("class", "tooltip hidden");
            
            var graph = d3.select("#graph")
                        .append("div")
                        .attr("class", "tooltip hidden");

            var g = main.append("g");

            d3.json('map.json').then(function(map, error) {
                if (error) {
                    throw error;
                }

                var projection = d3.geoMercator()
                                .center([-8.578648600000029,41.0211768])
                                .scale(75000)
                                .translate([width / 2, height / 1.5]);

                var path = d3.geoPath(projection);

                var features = topojson.feature(map, map.objects.map_qgis).features;
                for (var i = 0; i < features.length; i++) {
                    var feat = features[i];
                    var color = "#000000";
                    var total = feat.properties.total_2011;

                    if (total > 40000) {
                        color = "#bc0101";
                    }
                    else if (total > 15000) {
                        color = "#ef881a";
                    }
                    else if (total > 2500) {
                        color = "#efe51a";
                    }
                    else {
                        color = "#92ef19";
                    }

                    g.append("path")
                        .attr("id", feat.properties.lug11)
                        .attr("descr", feat.properties.descr)
                        .attr("close_2011", feat.properties.total_2011)
                        .attr("close_2016", feat.properties.total_2016)
                        .attr("fill", color)
                        .attr("stroke", "#888888")
                        .attr("d", path(feat));
                }

                //for tooltip 
                var offsetL = document.getElementById('map').offsetLeft+10;
                var offsetT = document.getElementById('map').offsetTop+10;

                d3.selectAll("path").on("mousemove",function(d, i) {
                    label = this.attributes["descr"].value;
                    d3.select(this);
                    let x = d3.event.x;
                    let y = d3.event.y;
                    tooltip.classed("hidden", false)
                    .attr("style", "left:"+(x+15)+"px;top:"+(y+10)+"px")
                    .html(label);
                }).on("mouseout", function() {
                    tooltip.classed("hidden", true);
                }).on("mousedown", function() {
                    d3.selectAll("path").classed("selected", false);
                    d3.select(this).classed("selected", true);
                    graph.classed("hidden", false)
                        .html("")
                        .append("svg")
                        .attr("width", "300")
                        .attr("height", "300")
                        .attr("id", "svg_graph")
                        .enter();

                    drawGraph(this);
                });
            });

            function drawGraph(node) {
                var margin = {top: 20, right: 20, bottom: 30, left: 50},
                    width = 300 - margin.left - margin.right,
                    height = 300 - margin.top - margin.bottom;

                // parse the date / time
                var parseTime = d3.timeParse("%Y");

                // set the ranges
                var x = d3.scaleTime().range([0, width]);
                var y = d3.scaleLinear().range([height, 0]);

                var data = [{"date" : "2011", "close" : node.attributes.close_2011.value}, {"date" : "2016", "close" : node.attributes.close_2016.value}];

                // define the line
                var valueline = d3.line()
                    .x(function(d) { return x(d.date); })
                    .y(function(d) { return y(d.close); });

                // appends a 'group' element to 'svg'
                // moves the 'group' element to the top left margin
                let svg_graph = d3.select("#svg_graph")
                        .append("g")
                        .attr("transform",
                            "translate(" + margin.left + "," + margin.top + ")");

                // format the data
                data.forEach(function(d) {
                    d.date = parseTime(d.date);
                    d.close = +d.close;
                });

                // Scale the range of the data
                x.domain(d3.extent(data, function(d) { return d.date; }));
                y.domain([0, d3.max(data, function(d) { return d.close; })]);

                // Add the valueline path.
                svg_graph.append("path")
                    .data([data])
                    .attr("class", "line")
                    .attr("d", valueline);
                    
                // Add the scatterplot
                svg_graph.selectAll("dot")
                    .data(data)
                    .enter().append("circle")
                    .attr("r", 5)
                    .attr("cx", function(d) { return x(d.date); })
                    .attr("cy", function(d) { return y(d.close); })
                    .on("mousemove",function(d, i) {
                        label = d.close;
                        d3.select(this);
                        let x = d3.event.x;
                        let y = d3.event.y;
                        tooltip.classed("hidden", false)
                        .attr("style", "left:"+(x+15)+"px;top:"+(y+10)+"px")
                        .html(label);
                    }).on("mouseout", function() {
                        tooltip.classed("hidden", true)
                    });

                // Add the X Axis
                svg_graph.append("g")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x));

                // Add the Y Axis
                svg_graph.append("g")
                    .call(d3.axisLeft(y));

            }
        div
            table
                tr
                    td= "Legenda: "
                    td(style="padding-left: 15px;")
                        div(style="background-color: #92ef19; width: 10px; height: 10px;")
                    td= "Menos de 2500"
                    td(style="padding-left: 15px;")
                        div(style="background-color: #efe51a; width: 10px; height: 10px;")
                    td= "2501 a 15000"
                    td(style="padding-left: 15px;")
                        div(style="background-color: #ef881a; width: 10px; height: 10px;")
                    td= "15001 a 40000"
                    td(style="padding-left: 15px;")
                        div(style="background-color: #bc0101; width: 10px; height: 10px;")
                    td= "Mais de 40000"


